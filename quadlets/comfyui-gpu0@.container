[Unit]
Description=ComfyUI Container (gpu=0)
# Weak dependency on comfyui-nginx-proxy
Wants=comfyui-nginx-proxy.service
# Require extant user home directory
AssertPathExists=%h

[Container]
Image=ghcr.io/pszenher/comfyui-oci:%i
Exec=comfyui --port 8188 --listen 0.0.0.0
# Add to internal comfyui podman network
Network=comfyui.network
HostName=gpu0.comfyui.internal
# Add CUDA:0 device to container context
AddDevice=nvidia.com/gpu=0
# Bind-mount relevant ComfyUI directories for user access
Volume=%h/comfyui/models:/opt/comfyui/models
Volume=%h/comfyui/custom_nodes:/opt/comfyui/custom_nodes
Volume=%h/comfyui/input:/opt/comfyui/input
Volume=%h/comfyui/gpu0/output:/opt/comfyui/output
# Create persistent local volume for dynamically-installed python libs
Volume=comfyui-gpu0-conda-%i:/opt/conda
# Auto-update container from registry by tag at startup
AutoUpdate=registry
# Manually set ContainerName due to '@' symbol in templated unit
#   backport:  https://github.com/containers/podman/issues/18705
ContainerName=systemd-%p_%i

[Service]
# Allow long timeout for image fetch
TimeoutStartSec=600
# Create bind-mount points for containerized ComfyUI
ExecStartPre=mkdir -p %h/comfyui/models
ExecStartPre=mkdir -p %h/comfyui/custom_nodes
ExecStartPre=mkdir -p %h/comfyui/input
ExecStartPre=mkdir -p %h/comfyui/gpu0/output

[Install]
WantedBy=default.target
